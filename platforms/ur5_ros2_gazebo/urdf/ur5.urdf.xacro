<?xml version="1.0"?>

<!-- 

# ===================================== COPYRIGHT ===================================== #
#                                                                                       #
#  IFRA (Intelligent Flexible Robotics and Assembly) Group, CRANFIELD UNIVERSITY        #
#  Created on behalf of the IFRA Group at Cranfield University, United Kingdom          #
#  E-mail: IFRA@cranfield.ac.uk                                                         #
#                                                                                       #
#  Licensed under the Apache-2.0 License.                                               #
#  You may not use this file except in compliance with the License.                     #
#  You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0  #
#                                                                                       #
#  Unless required by applicable law or agreed to in writing, software distributed      #
#  under the License is distributed on an "as-is" basis, without warranties or          #
#  conditions of any kind, either express or implied. See the License for the specific  #
#  language governing permissions and limitations under the License.                    #
#                                                                                       #
#  IFRA Group - Cranfield University                                                    #
#  AUTHORS: Mikel Bueno Viso - Mikel.Bueno-Viso@cranfield.ac.uk                         #
#           Seemal Asif      - s.asif@cranfield.ac.uk                                   #
#           Phil Webb        - p.f.webb@cranfield.ac.uk                                 #
#                                                                                       #
#  Date: July, 2022.                                                                    #
#                                                                                       #
# ===================================== COPYRIGHT ===================================== #

# ===================================== COPYRIGHT ===================================== #
#                                                                                       #
#  Some of the information used to build the ROS2 UR5-Robot .urdf files in this ROS2    #
#  repository has been taken from the following resources:                              #
#       - Universal Robots ROS2 Description:                                            #
#         https://github.com/UniversalRobots/Universal_Robots_ROS2_Description          #
#       - Universal Robots ROS2 Gazebo Simulation:                                      #
#         https://github.com/UniversalRobots/Universal_Robots_ROS2_Gazebo_Simulation    #
#                                                                                       #
#  AUTHORS:                                                                             #
#       - ROS-Industrial - https://rosindustrial.org                                    #
#       - Universal Robots - https://github.com/UniversalRobots                         #
#       - Nadia Hammoudeh Garcia, Kelsey Hawkins, G.A. vd. Hoorn, Lovro Ivanov, Mathias #
#         Ludtke, Wim Meeussen, Felix Messmer, Miguel Prada Sarasola, Denis Stogl,      #
#         Andy Zelenak, Marvin Grosse Besselmann.                                       #
#       - Maintainers: Felix Exner (exner@fzi.de), Tristan Schnell (schnell@fzi.de),    #
#         Lovro Ivanov (lovro.ivanov@gmail.com), Denis Stogl (denis@stoglrobotics.de).  #
#                                                                                       #
#  Copyright (c) 2021, Universal Robots A/S                                             #
#  (ORIGINAL LICENSE) -> Licensed under the BSD 3-Clause License.                       #
#                                                                                       #
#  CHANGES MADE:                                                                        #
#  Robot information/specifications have been taken, and the code has been modified and #
#  re-organised in accordance with the ros2_RobotSimulation standards.                  #
#                                                                                       #
# ===================================== COPYRIGHT ===================================== #

# ======= CITE OUR WORK ======= #
# You can cite our work with the following statement:
# IFRA (2022) ROS2.0 ROBOT SIMULATION. URL: https://github.com/IFRA-Cranfield/ros2_RobotSimulation.

-->

<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur5">

  <!-- Load and initialise UR5 INITIAL POSITIONS FILE: 
  <xacro:arg name="initial_positions_file" default="$(find ur5_ros2_gazebo/config/initial_positions.yaml"/>
  <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/> -->
  <!-- IF ADD TO UR5: initial_positions="${load_yaml(initial_positions_file)}" -->
  
  <!-- ===== ARGUMENTS ===== -->

  <!-- CELL LAYOUT:  -->
  <xacro:arg name="cell_layout_1" default="false"/>
  <xacro:property name="cell_layout_1" value="$(arg cell_layout_1)"/>
  <xacro:arg name="cell_layout_2" default="false"/>
  <xacro:property name="cell_layout_2" value="$(arg cell_layout_2)"/>  
  <!-- CONTROLLER:  -->
  <xacro:arg name="hardware_interface" default="true"/>
  <xacro:property name="hardware_interface" value="$(arg hardware_interface)"/>
  <!-- CAMERA:  -->
  <xacro:arg name="camera_enabled" default="false"/>
  <xacro:property name="camera_enabled" value="$(arg camera_enabled)"/>

  
  <!-- END-EFFECTOR:  -->
  <xacro:include filename="$(find robotiq_85_description)/urdf/robotiq_85_gripper_macro.urdf.xacro" />
  
  <!-- UR Robot PARAMS: -->
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Include XACRO-MACRO file of the UR5 ROBOT: -->
  <xacro:include filename="$(find ur5_ros2_gazebo)/urdf/ur5_macro.urdf.xacro"/>	

  <xacro:ur5 
      prefix=""
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)" 
      hardwareInterface="$(arg hardware_interface)"
      />


  <!-- Robotiq Coupler -->
  <!--  + Height added by the coupler: 8mm -->
  <!--  + Reference frame: at the middle (4mm) -->
  <link name="robotiq_coupler">
    <visual>
      <geometry>
        <mesh filename="file://$(find robotiq_85_description)/meshes/visual/ur_to_robotiq_adapter.dae" />
      </geometry>
      <material name="flat_black"/>
    </visual>
    <!--collision>
      <geometry>
        <mesh filename="file://$(find robotiq_85_description)/meshes/collision/ur_to_robotiq_adapter.stl" />
      </geometry>
    </collision-->
    <inertial>
      <origin xyz="2.073e-05   1.45286e-03  -1.1049e-03" rpy="0 0 0" />
      <mass value="0.168" />
      <inertia ixx="6.69695624e-05" ixy="5.21511788e-09" ixz="-2.74383009e-08" 
               iyy="7.85088161e-05" iyz="5.41105193e-07" izz="1.41819717e-04"/>
    </inertial>
  </link>

  <joint name="robotiq_coupler_joint" type="fixed">
    <origin xyz="0 0 0.004" rpy="0 0 ${-pi/2.0}" />
    <parent link="tool0"/>
    <child link="robotiq_coupler"/>
  </joint>
  <gazebo reference="robotiq_coupler">
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <!-- Attach the robotiq 85 gripper -->
  <xacro:robotiq_85_gripper prefix="" parent="robotiq_coupler" sim="true" >
    <origin xyz="0 0 0.004" rpy="0 ${-pi/2} ${pi}"/>
  </xacro:robotiq_85_gripper>
  
  
  <!-- Gazebo world link: -->
  <link name="world"/>

  <!-- ========== ========== ========== ========== ========== ========== -->
  <!-- CELL LAYOUT SELECTION: -->

  <!-- CELL LAYOUT N1) UR5 ROBOT alone: -->
  <xacro:if value="${cell_layout_1}">
    <joint name="world-base_link-fixed" type="fixed">
      <parent link="world"/>
      <child link="base_link"/>
    </joint>
  </xacro:if>

  <!-- CELL LAYOUT N2) UR5 ROBOT on top of a pedestal: -->
  <xacro:if value="${cell_layout_2}">
    <link name='ur_base'>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="100"/>
        <inertia ixx="0.01"  ixy="0"  ixz="0" iyy="0.01" iyz="0" izz="0.01" />
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy=" 0 0 0"/> 
        <geometry>
          <box size = "0.2 0.2 0.2"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <geometry>
          <box size = "0.2 0.2 0.2"/>
        </geometry>
        <material name="red">
          <color rgba="1 0 0 1"/>
        </material>
      </visual>
    </link>
    <gazebo reference="ur_base">
      <material>Gazebo/Red</material>
    </gazebo>

    <joint name="world_joint" type="fixed">
      <parent link="world" />
      <child link = "ur_base" />
      <origin xyz="0.0 0.0 0.1" rpy="0.0 0.0 0.0" />
    </joint>
    <joint name="ur_joint" type="fixed">
      <parent link="ur_base" />
      <child link = "base_link" />
      <origin xyz="0.0 0.0 0.1" rpy="0.0 0.0 0.0" /> 
    </joint>
  </xacro:if>


  <xacro:if value="${camera_enabled}">
    <!-- top-down view camera -->
    <xacro:include filename="$(find ur5_ros2_gazebo)/urdf/sensors/d435.urdf.xacro" />
    <!-- top-down view Camera Link -->
    <xacro:sensor_d435 name="camera" topics_ns="camera" parent="world" >
      <origin xyz="0.65 0.0 1.4" rpy="0 1.575796 0"/>
    </xacro:sensor_d435>
    
    <!-- wrist camera -->
    <joint name="camera_base_joint" type="fixed">
      <parent link="robotiq_85_base_link"/>
      <child link="wrist_camera_base_link" />
      <origin xyz="-0.0 0.0 0.0" rpy="1.575796 0 1.575796"/>
    </joint>

    <link name="wrist_camera_base_link">
      <visual>
        <geometry>
          <mesh filename="file://$(find robotiq_85_description)/meshes/visual/d435_UR5_camera_mount.dae" scale="0.001 0.001 0.001"/>
        </geometry>                
      </visual>
      <!-- <collision>
           <geometry>
           <mesh filename="package://robotiq_85_description/meshes/collision/d435_UR5_camera_mount.stl"/>
           </geometry>
           </collision> -->
      <inertial>
        <mass value="0.019555" />
        <origin xyz="0.0 0.0 0.0" />
        <inertia ixx = "0.000002" ixy = "0.000000" ixz = "0.000000"
                 iyx = "0.000000" iyy = "0.000005" iyz = "0.000000"
                 izx = "0.000000" izy = "0.000000" izz = "0.000006" />
      </inertial>            
    </link>

    <xacro:sensor_d435 name="wrist_camera" topics_ns="wrist_camera" parent="wrist_camera_base_link" >
      <origin xyz="0.0 0.08 0.015" rpy="1.575796 -1.575796 0"/>
    </xacro:sensor_d435>
    
  </xacro:if>

  

  <!-- Gripper cancel topic -->                                                                
  <xacro:arg name="gripper_action_topic"
             default="gripper_controller/follow_joint_trajectory"/>   
  <!-- Grasp Plugin -->
  <gazebo>
    <plugin name="gazebo_grasp_fix_plugin" filename="libgazebo_grasp_fix_plugin.so">
      <arm>
        <arm_name>robotiq_85_gripper</arm_name>
        <palm_link> wrist_3_link </palm_link>
        <gripper_link> robotiq_85_left_finger_tip_link </gripper_link>
        <gripper_link> robotiq_85_right_finger_tip_link </gripper_link>
      </arm>
      <forces_angle_tolerance>100</forces_angle_tolerance>
      <update_rate>20</update_rate>
      <grip_count_threshold>0.85</grip_count_threshold>
      <max_grip_count>8</max_grip_count>
      <!--release_tolerance>0.0125</release_tolerance--> 
      <release_tolerance>0.0025</release_tolerance> 
      <disable_collisions_on_attach>false</disable_collisions_on_attach>
      <contact_topic>__default_topic__</contact_topic>
      <!-- Cancel Action ... -->                                                           
      <action_topic>$(arg gripper_action_topic)</action_topic>   
    </plugin>
  </gazebo>
  
</robot>
